---

- name: docker service state started verification.
  service: name=docker state=started enabled=yes
# tasks file for docker-swarm
- name: "get docker info"
  shell: docker info
  register: docker_info
  changed_when: false



- name: "create primary swarm manager"
  shell: docker swarm init --advertise-addr {{ ansible_eth0['ipv4']['address'] }}
  when: "docker_info.stdout.find('Swarm: inactive') != -1 and inventory_hostname in groups['master']"


- name: "get docker swarm manager token"
  shell: docker swarm join-token -q manager
  register: manager_token
 #when: "docker_info.stdout.find('Swarm: inactive') != -1 and
  when: inventory_hostname in groups['master']

- name: "get docker swarm worker token"
  shell: docker swarm join-token -q worker
  register: worker_token
  when: inventory_hostname in groups['master']



- name: copy some testing
  set_fact: part= "{{ worker_token.stdout }} {{ ansible_eth0['ipv4']['address'] }}"
  when: inventory_hostname in groups['master']


- shell: echo "  {{ hostvars[groups['master'][0]]['ansible_eth0']['ipv4']['address'] }}"  > /tmp/test
- shell: echo "{{ hostvars[groups['master'][0]] }}" >> /tmp/test1

- name: "join as a manager"
  shell: "docker swarm join --token {{ hostvars['manager1']['manager_token']['stdout'] }} {{ hostvars['manager1']['ansible_eth0']['ipv4']['address'] }}:2377"
  when: "docker_info.stdout.find('Swarm: inactive') != -1 and inventory_hostname in groups['manager']"
  retries: 3
  delay: 20
  
- name: "join as a worker"
  shell: "docker swarm join --token {{ hostvars['manager1']['worker_token']['stdout'] }} {{ hostvars['manager1']['ansible_eth0']['ipv4']['address'] }}:2377"
  when: "docker_info.stdout.find('Swarm: inactive') != -1 and inventory_hostname in groups['worker']"
  retries: 3
  delay: 20
